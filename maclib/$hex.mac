.*
.*
.*  This program and the accompanying materials are
.*
.*  made available under the terms of the Eclipse Public License v2.0 which accompanies
.*
.*  this distribution, and is available at https://www.eclipse.org/legal/epl-v20.html
.*
.*  
.*
.*  SPDX-License-Identifier: EPL-2.0
.*
.*  
.*
.*  Copyright Contributors to the Zowe Project.
.*
.*
.**********************************************************************
.* Macro: $HEX
.*
.* Description:
.*   Internal macro used to convert a hex value into an EBCDIC char
.*   string
.*
.* Usage:
.*   $GETV FROM=fulword,INTO=(R1)     ->  LA   R1,FULWORD
.*   $GETV FROM=(*,fulword),INTO=(R1) ->  L    R1,FULWORD
.*
.**********************************************************************
         MACRO
&LBL     $HEX  &TYPE=DISPLAY,                                          >
               &DATA=1,                                                >
               &HEXDATA=,                                              >
               &CASE=UPPER,                                            >
               &OUT=DBLWORD
.*
         GBLC  &GHEXTBL                Addr of generated hex data
         LCLA  &N
         LCLC  &CNVTTBL                Hex conversion table
         LCLC  &LHEXTBL
         LCLC  &M                      Err msg header
         LCLC  &P(2)                   Parm name & data
&N       SETA  &SYSNDX
&M       SETC  '$HEX -'
&LHEXTBL SETC  '&GHEXTBL'
.**********************************************************************
.* Set hex conversion table upper or lower case
.**********************************************************************
&CNVTTBL SETC  '0123456789ABCDEF'      Uppercase hex conversion table
        AIF     ('&CASE' EQ 'UPPER').LBL0000
&CNVTTBL SETC  '0123456789abcdef'      Lowercase hex conversion table
.**********************************************************************
.* Set macro branch label
.**********************************************************************
.LBL0000 ANOP  ,
         AIF   ('&LBL' EQ '').NOLBL
&LBL     DS    0H
.NOLBL   ANOP  ,
.*
         AIF   ('&TYPE'(1,3) EQ 'DIS').LBL2000
         AIF   ('&TYPE'(1,3) EQ 'DEC').LBL1000
&P(1)    SETC  'TYPE','&TYPE'
         AGO   .MERR010
.*
.***     Convert to Decimal
.*
.LBL1000 ANOP  ,
         AIF   ('&OUT' EQ '').MERR020
&OT      SETC  T'&OUT
         $GETV INTO=(0),FROM=&DATA     Get I/P addr
         $GETV INTO=(1),FROM=&OUT      Get O/P addr
         CVD   0,&OUT
         OI    &OUT+7,X'0F'            Add sign
         UNPK  &OUT.(4),&OUT           Make displayable
         MEXIT ,
.*
.***     Make displayable
.*
.LBL2000 ANOP  ,
         $GETV INTO=(0),FROM=&DATA
         AIF   ('&LHEXTBL' NE '').LBL2020 Got conversion tbl already?
         AIF   ('&HEXDATA' NE '').LBL2010
         B     HEX&N.B
HEX&N.A  DC    C'&CNVTTBL'             Define hex conversion table
&GHEXTBL SETC  'HEX&N.A'               Save table for future use
&LHEXTBL SETC  '&GHEXTBL'              Use it locally
         AGO   .LBL2020
.LBL2010 ANOP  ,
&LHEXTBL SETC  '&HEXDATA'              Use supplied conversion tbl
.LBL2020 ANOP  ,
HEX&N.B  DS    0H
         LA    14,0
         LA    15,0
         LA    2,8                     Init count
HEX&N.C  DS    0H
         SRDL  14,8                    Last char of 14 left
         SRDL  0,4                     1st 4 bits in 0 to 1
         SRL   1,28                    1st halfword of reg
         LA    1,&LHEXTBL.(1)
         ICM   14,B'1000',0(1)
         BCT   2,HEX&N.C               Next char
         AIF   ('&OUT' EQ '').MEND     Output area provided? No ->
         STM   14,15,&OUT              Yes, put results here
         MEXIT ,
.**********************************************************************
.* Macro error messages
.**********************************************************************
.MERR010 MNOTE 8,'&M Required parm=&P(1) value=&P(2) is invalid'
         MEXIT
.MERR020 MNOTE 8,'&M TYPE=DEC option requires OUT=dblword'
.MEND    MEND
